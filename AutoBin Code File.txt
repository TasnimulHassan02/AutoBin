Automatic Trash-can: 

#include <Servo.h>   //servo library 

Servo sg90;   

int echo = 7;   

int trig = 6;     

int servopin = 9; 

int distance; 

int duration; 

 

void setup() {       

    sg90.attach(servopin); 

    pinMode(trig, OUTPUT);   

    pinMode(echo, INPUT);   

  

} 

 

void loop() { 

  digitalWrite(trig,0); 

  delay(2); 

  digitalWrite(trig,1); 

  delayMicroseconds(10); 

  digitalWrite(trig,0); 

  duration = pulseIn(echo,1); 

  distance = duration*0.034/2; 

  

if ( distance<20 ) {   

 sg90.write(0);     

 delay(2500); 

 Serial.print(distance); 

} 

 else{ 

  sg90.write(90); 

  delay(50); 

 } 

} 

 

Bluetooth RC Car: 

#include <AFMotor.h> 

#include <SoftwareSerial.h> 

 

SoftwareSerial bluetoothSerial(9, 10); // RX, TX 

 

//initial motors pin 

AF_DCMotor motor1(1, MOTOR12_1KHZ); 

AF_DCMotor motor2(2, MOTOR12_1KHZ); 

AF_DCMotor motor3(3, MOTOR34_1KHZ); 

AF_DCMotor motor4(4, MOTOR34_1KHZ); 

 

char command; 

char data; 

//char data1; 

//char data2; 

//char data3; 

//char data4; 

 

void setup() 

{ 

  bluetoothSerial.begin(9600);  //Set the baud rate to your Bluetooth module. 

} 

 

void loop() { 

  if (bluetoothSerial.available() > 0) { 

    command = bluetoothSerial.read(); 

 

    Stop(); //initialize with motors stoped 

    

    switch (command) { 

      case '1': 

        forward(2000); // Move forward for 2 seconds 

        right(500);    // Turn left for 0.5 seconds //all were set to 500 initially 

        forward(1000); // Move forward for 1 second 

        Stop(); 

        

 

        while (bluetoothSerial.available ()==0) { 

        } 

        

        data = bluetoothSerial.read(); 

        

        // Handle the docking procedure after '1' has finished 

        if (data == '0') { // Back to dock station 

          back(1000); 

          left(400); 

          back(2000); 

          Stop(); 

        } 

        break; 

      case '2': 

        forward(2000); // Move forward for 2 seconds 

        left(400);    // Turn left for 1 seconds 

        forward(1000); // Move forward for 1 second 

        Stop(); 

        

        while (bluetoothSerial.available ()==0) { 

        } 

        

        data = bluetoothSerial.read(); 

        if (data == '0') { // Back to dock station 

          back(1000); 

          right(600); 

          back(2000); 

          Stop(); 

        } 

        break; 

 

      case '3': 

        forward(3000); // Move forward for 2 seconds 

        right(550);    // Turn left for 1 seconds 

        forward(1000); // Move forward for 1 second 

        Stop(); 

 

        while (bluetoothSerial.available ()==0) { 

        } 

        

        data = bluetoothSerial.read(); 

        if (data == '0') { // Back to dock station 

          back(1000); 

          left(400); 

          back(3000); 

          Stop(); 

        } 

        break; 

 

      case '4': 

        forward(3000); // Move forward for 2 seconds 

        left(400);    // Turn left for 1 seconds 

        forward(1000); // Move forward for 1 second 

        Stop(); 

 

        while (bluetoothSerial.available ()==0) { 

        } 

        

        data = bluetoothSerial.read(); 

        if (data == '0') { // Back to dock station 

            back(1000); 

            right(600); 

            back(3000); 

            Stop(); 

        } 

        break; 

} 

 

void forward(int duration) 

{ 

  motor1.setSpeed(255); //Define maximum velocity 

  motor1.run(FORWARD);  //rotate the motor clockwise 

  motor2.setSpeed(255); //Define maximum velocity 

  motor2.run(FORWARD);  //rotate the motor clockwise 

  motor3.setSpeed(255); //Define maximum velocity 

  motor3.run(FORWARD);  //rotate the motor clockwise 

  motor4.setSpeed(255); //Define maximum velocity 

  motor4.run(FORWARD);  //rotate the motor clockwise 

  delay(duration);      // Move for the specified duration 

} 

 

void back(int duration) 

{ 

  motor1.setSpeed(255); //Define maximum velocity 

  motor1.run(BACKWARD); //rotate the motor anti-clockwise 

  motor2.setSpeed(255); //Define maximum velocity 

  motor2.run(BACKWARD); //rotate the motor anti-clockwise 

  motor3.setSpeed(255); //Define maximum velocity 

  motor3.run(BACKWARD); //rotate the motor anti-clockwise 

  motor4.setSpeed(255); //Define maximum velocity 

  motor4.run(BACKWARD); //rotate the motor anti-clockwise 

  delay(duration);      // Move for the specified duration 

} 

 

void right(int duration) 

{ 

  motor1.setSpeed(255); //Define maximum velocity 

  motor1.run(BACKWARD); //rotate the motor anti-clockwise 

  motor2.setSpeed(255); //Define maximum velocity 

  motor2.run(BACKWARD); //rotate the motor anti-clockwise 

  motor3.setSpeed(255); //Define maximum velocity 

  motor3.run(FORWARD);  //rotate the motor clockwise 

  motor4.setSpeed(255); //Define maximum velocity 

  motor4.run(FORWARD);  //rotate the motor clockwise 

  delay(duration);      // Move for the specified duration 

} 

 

void left(int duration) 

{ 

  motor1.setSpeed(255); //Define maximum velocity 

  motor1.run(FORWARD);  //rotate the motor clockwise 

  motor2.setSpeed(255); //Define maximum velocity 

  motor2.run(FORWARD);  //rotate the motor clockwise 

  motor3.setSpeed(255); //Define maximum velocity 

  motor3.run(BACKWARD); //rotate the motor anti-clockwise 

  motor4.setSpeed(255); //Define maximum velocity 

  motor4.run(BACKWARD); //rotate the motor anti-clockwise 

  delay(duration);      // Move for the specified duration 

} 

 

void Stop() 

{ 

  motor1.setSpeed(0);  //Define minimum velocity 

  motor1.run(RELEASE); //stop the motor when release the button 

  motor2.setSpeed(0);  //Define minimum velocity 

  motor2.run(RELEASE); //rotate the motor clockwise 

  motor3.setSpeed(0);  //Define minimum velocity 

  motor3.run(RELEASE); //stop the motor when release the button 

  motor4.setSpeed(0);  //Define minimum velocity 

  motor4.run(RELEASE); //stop the motor when release the button 

} 

 